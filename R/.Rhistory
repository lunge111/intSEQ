laplace = fit0$theta^2*sqrt(2*pi)*fit0$SE.theta*pnorm(1/fit0$theta)
c(nullLik,laplace)
}
res100=replicate(100,tryint(100))
res100
tryint <- function(nn){
data = rnbinom(n=nn,size = 0.5,mu=5)
library(MASS)
x = scale(1:nn)
fit=glm.nb(data~x)
fit0=glm.nb(data~1)
m0=rep(mean(data),nn)
ma=fitted(fit)
const = exp(sum(log(dnbinom(x= data,mu=m0,size = fit0$theta)))/nn)
nullfunc <- function(y, data,  m0,ma, const){
joint.likelihood(exp(y),ys=data, cond=cond,m0,ma, null=T,const)*exp(y+y^2)
}
rule15 <- gaussHermiteData(150)
nullLik=ghQuad(nullfunc, rule15, data = data,m0=m0, ma=ma, const = const)
laplace = fit0$theta^2*sqrt(2*pi)*fit0$SE.theta*pnorm(1/fit0$theta)
c(nullLik/laplace)
}
res100=replicate(100,tryint(100))
res100
res1000=replicate(100,tryint(10000))
res1000
res1000=replicate(100,tryint(100000))
tryint <- function(nn){
data = rnbinom(n=nn,size = 5,mu=5)
library(MASS)
x = scale(1:nn)
fit=glm.nb(data~x)
fit0=glm.nb(data~1)
m0=rep(mean(data),nn)
ma=fitted(fit)
const = exp(sum(log(dnbinom(x= data,mu=m0,size = fit0$theta)))/nn)
nullfunc <- function(y, data,  m0,ma, const){
joint.likelihood(exp(y),ys=data, cond=cond,m0,ma, null=T,const)*exp(y+y^2)
}
rule15 <- gaussHermiteData(150)
nullLik=ghQuad(nullfunc, rule15, data = data,m0=m0, ma=ma, const = const)
laplace = fit0$theta^2*sqrt(2*pi)*fit0$SE.theta*pnorm(1/fit0$theta)
c(nullLik/laplace)
}
res100=replicate(100,tryint(100))
res100
res1000=replicate(100,tryint(1000))
res1000
res1000=replicate(100,tryint(1000000))
res100=replicate(100,tryint(100))
res1000=replicate(100,tryint(1000))
res10000=replicate(100,tryint(10000))
res100000=replicate(100,tryint(100000))
res1000000=replicate(100,tryint(1000000))
res1000000
res100000
res10000
res1000
res100=replicate(100,tryint(100))
res100
tryint <- function(nn){
data = rnbinom(n=nn,size = 5,mu=5)
library(MASS)
x = scale(1:nn)
fit=glm.nb(data~x)
fit0=glm.nb(data~1)
m0=rep(mean(data),nn)
ma=fitted(fit)
const = exp(sum(log(dnbinom(x= data,mu=m0,size = fit0$theta)))/nn)
nullfunc <- function(y, data,  m0,ma, const){
joint.likelihood(exp(y),ys=data, cond=cond,m0,ma, null=T,const)*exp(y+y^2)
}
rule15 <- gaussHermiteData(150)
nullLik=ghQuad(nullfunc, rule15, data = data,m0=m0, ma=ma, const = const)
laplace = fit0$theta^2*sqrt(2*pi)*fit0$SE.theta*pnorm(1/fit0$theta)/nn
c(nullLik/laplace)
}
res100=replicate(100,tryint(100))
res100
res1000=replicate(100,tryint(1000))
res1000
res10000=replicate(100,tryint(10000))
.Last.value
tryint <- function(nn){
data = rnbinom(n=nn,size = 5,mu=5)
library(MASS)
x = scale(1:nn)
fit=glm.nb(data~x)
fit0=glm.nb(data~1)
m0=rep(mean(data),nn)
ma=fitted(fit)
const = exp(sum(log(dnbinom(x= data,mu=m0,size = fit0$theta)))/nn)
nullfunc <- function(y, data,  m0,ma, const){
joint.likelihood(exp(y),ys=data, cond=cond,m0,ma, null=T,const)*exp(y+y^2)
}
rule15 <- gaussHermiteData(150)
nullLik=ghQuad(nullfunc, rule15, data = data,m0=m0, ma=ma, const = const)
laplace = fit0$theta^(-2)*sqrt(2*pi)*fit0$SE.theta*pnorm(1/fit0$theta)
c(nullLik/laplace)
}
res100=replicate(100,tryint(100))
library(intSEQ)
library(fastGHQuad)
tryint <- function(nn){
data = rnbinom(n=nn,size = 5,mu=5)
library(MASS)
x = scale(1:nn)
fit=glm.nb(data~x)
fit0=glm.nb(data~1)
m0=rep(mean(data),nn)
ma=fitted(fit)
const = exp(sum(log(dnbinom(x= data,mu=m0,size = fit0$theta)))/nn)
nullfunc <- function(y, data,  m0,ma, const){
joint.likelihood(exp(y),ys=data, cond=cond,m0,ma, null=T,const)*exp(y+y^2)
}
rule15 <- gaussHermiteData(150)
nullLik=ghQuad(nullfunc, rule15, data = data,m0=m0, ma=ma, const = const)
laplace = fit0$theta^(-2)*sqrt(2*pi)*fit0$SE.theta*pnorm(1/fit0$theta)
c(nullLik/laplace)
}
res100=replicate(100,tryint(100))
res100
res1000=replicate(100,tryint(1000))
res1000
res10000=replicate(100,tryint(10000))
res100000=replicate(100,tryint(100000))
res1000000=replicate(100,tryint(1000000))
res10000
res100000
res1000
res100
tryint <- function(nn){
data = rnbinom(n=nn,size = 5,mu=5)
library(MASS)
x = scale(1:nn)
fit=glm.nb(data~x)
fit0=glm.nb(data~1)
m0=rep(mean(data),nn)
ma=fitted(fit)
const = exp(sum(log(dnbinom(x= data,mu=m0,size = fit0$theta)))/nn)
nullfunc <- function(y, data,  m0,ma, const){
joint.likelihood(exp(y),ys=data, cond=cond,m0,ma, null=T,const)*exp(y+y^2)
}
rule15 <- gaussHermiteData(150)
nullLik=ghQuad(nullfunc, rule15, data = data,m0=m0, ma=ma, const = const)
laplace = fit0$theta^(-2)*sqrt(2*pi)*fit0$SE.theta*pnorm(1/fit0$theta)
c(nullLik,laplace)
}
res100=replicate(100,tryint(100))
res100
res1000=replicate(100,tryint(1000))
res10000=replicate(100,tryint(10000))
res10000
tryint <- function(nn){
data = rnbinom(n=nn,size = 5,mu=5)
library(MASS)
x = scale(1:nn)
fit=glm.nb(data~x)
fit0=glm.nb(data~1)
m0=rep(mean(data),nn)
ma=fitted(fit)
const = exp(sum(log(dnbinom(x= data,mu=m0,size = fit0$theta)))/nn)
nullfunc <- function(y, data,  m0,ma, const){
joint.likelihood(exp(y),ys=data, cond=cond,m0,ma, null=T,const)*exp(y+y^2)
}
rule15 <- gaussHermiteData(15)
nullLik=ghQuad(nullfunc, rule15, data = data,m0=m0, ma=ma, const = const)
laplace = fit0$theta^(-2)*sqrt(2*pi)*fit0$SE.theta*pnorm(1/fit0$theta)
c(nullLik,laplace)
}
res100=replicate(100,tryint(100))
res1000=replicate(100,tryint(1000))
res100
res1000
res10000=replicate(100,tryint(10000))
res10000
tryint <- function(nn){
data = rnbinom(n=nn,size = 5,mu=5)
library(MASS)
x = scale(1:nn)
fit=glm.nb(data~x)
fit0=glm.nb(data~1)
m0=rep(mean(data),nn)
ma=fitted(fit)
const = exp(sum(log(dnbinom(x= data,mu=m0,size = fit0$theta)))/nn)
nullfunc <- function(y, data,  m0,ma, const){
joint.likelihood(exp(y),ys=data, cond=cond,m0,ma, null=T,const)*exp(y+y^2)
}
rule15 <- gaussHermiteData(250)
nullLik=ghQuad(nullfunc, rule15, data = data,m0=m0, ma=ma, const = const)
laplace = fit0$theta^(-2)*sqrt(2*pi)*fit0$SE.theta*pnorm(1/fit0$theta)
c(nullLik,laplace)
}
res100=replicate(100,tryint(100))
res1000=replicate(100,tryint(1000))
res100
res1000
res10000=replicate(100,tryint(10000))
res10000
res10000
res100=replicate(100,tryint(100))
res500 = replicate(100,tryint(500))
res1000=replicate(100,tryint(1000))
tryint <- function(nn){
data = rnbinom(n=nn,size = 5,mu=5)
library(MASS)
x = scale(1:nn)
fit=glm.nb(data~x)
fit0=glm.nb(data~1)
m0=rep(mean(data),nn)
ma=fitted(fit)
const = exp(sum(log(dnbinom(x= data,mu=m0,size = fit0$theta)))/nn)
nullfunc <- function(y, data,  m0,ma, const){
joint.likelihood(exp(y),ys=data, cond=cond,m0,ma, null=T,const)*exp(y+y^2)
}
rule15 <- gaussHermiteData(150)
nullLik=ghQuad(nullfunc, rule15, data = data,m0=m0, ma=ma, const = const)
laplace = fit0$theta^(-2)*sqrt(2*pi)*fit0$SE.theta*pnorm(1/fit0$theta)
c(nullLik,laplace)
}
res100=replicate(100,tryint(100))
res500 = replicate(100,tryint(500))
res1000=replicate(100,tryint(1000))
res100
res500
res100[1,]/res100[2,]
res100[1,]/res100[2,]
res500[1,]/res500[2,]
res1000[1,]/res1000[2,]
res100[1,]/res100[2,]
rr=c(res100[1,]/res100[2,],
res500[1,]/res500[2,],
res1000[1,]/res1000[2,])
boxplot(rr~ff)
ff=factor(rep(1:3,each=100))
boxplot(rr~ff)
ff=factor(rep(c(100,500,1000),each=100))
boxplot(rr~ff)
res1500=replicate(100,tryint(1500))
rr=c(res100[1,]/res100[2,],
res500[1,]/res500[2,],
res1000[1,]/res1000[2,],res1500[1,]/res1500[2,])
ff=factor(rep(c(100,500,1000,1500),each=100))
boxplot(rr~ff)
pnorm(0)
res1500
rule15 <- gaussHermiteData(150)
rule15
rule15 <- gaussHermiteData(150)
rule15
res500 = replicate(100,tryint(500))
res500
boxplot(res500[1,])
boxplot(c(res500[1,],res500[2,]), factor(rep(c("GH","approx"),each=100)))
boxplot(c(res500[1,],res500[2,]), factor(rep(c("GH","approx"),each=100)))
rep(c("GH","approx"),each=100))
rep(c("GH","approx"),each=100)
boxplot(c(res500[1,],res500[2,])~ factor(rep(c("GH","approx"),each=100)))
boxplot(c(res1500[1,],res1500[2,])~ factor(rep(c("GH","approx"),each=100)))
boxplot(c(res500[1,],res500[2,])~ factor(rep(c("GH","approx"),each=100)))
boxplot(c(res1500[1,],res1500[2,])~ factor(rep(c("GH","approx"),each=100)))
boxplot(c(res10000[1,],res10000[2,])~ factor(rep(c("GH","approx"),each=100)))
boxplot(c(res500[1,],res500[2,])~ factor(rep(c("GH","approx"),each=100)))
boxplot(c(res1500[1,],res1500[2,])~ factor(rep(c("GH","approx"),each=100)))
boxplot(c(res100[1,],res100[2,])~ factor(rep(c("GH","approx"),each=100)))
boxplot(c(res500[1,],res500[2,])~ factor(rep(c("GH","approx"),each=100)))
boxplot(c(res1500[1,],res1500[2,])~ factor(rep(c("GH","approx"),each=100)))
boxplot(c(res10000[1,],res10000[2,])~ factor(rep(c("GH","approx"),each=100)))
boxplot(rr~ff)
res50 = replicate(100,tryint(50))
res100=replicate(100,tryint(100))
res50 = replicate(100,tryint(50))
res50
rr=c(res50[1,]/res50[2,],res100[1,]/res100[2,],
res500[1,]/res500[2,],
res1000[1,]/res1000[2,],res1500[1,]/res1500[2,])
ff=factor(rep(c(50,100,500,1000,1500),each=100))
boxplot(rr~ff)
res60 = replicate(100,tryint(60))
rr=c(res60[1,]/res60[2,],res100[1,]/res100[2,],
res500[1,]/res500[2,],
res1000[1,]/res1000[2,],res1500[1,]/res1500[2,])
ff=factor(rep(c(50,100,500,1000,1500),each=100))
boxplot(rr~ff)
par(mfrow=c(2,2))
boxplot(c(res100[1,],res100[2,])~ factor(rep(c("GH","approx"),each=100)))
boxplot(c(res500[1,],res500[2,])~ factor(rep(c("GH","approx"),each=100)))
boxplot(c(res1500[1,],res1500[2,])~ factor(rep(c("GH","approx"),each=100)))
boxplot(c(res10000[1,],res10000[2,])~ factor(rep(c("GH","approx"),each=100)))
>fastGHQuad
?fastGHQuad
boxplot(c(res100[1,],res100[2,])~ factor(rep(c("GH","approx"),each=100)))
boxplot(c(res500[1,],res500[2,])~ factor(rep(c("GH","approx"),each=100)))
library(truncnorm)
nn=100
library(MASS)
x = scale(1:nn)
fit=glm.nb(data~x)
fit0=glm.nb(data~1)
data = rnbinom(n=nn,size = 5,mu=5)
fit=glm.nb(data~x)
fit0=glm.nb(data~1)
m0=rep(mean(data),nn)
ma=fitted(fit)
const = exp(sum(log(dnbinom(x= data,mu=m0,size = fit0$theta)))/nn)
rule15 <- gaussHermiteData(150)
nullLik=ghQuad(nullfunc, rule15, data = data,m0=m0, ma=ma, const = const)
nullfunc <- function(y, data,  m0,ma, const){
joint.likelihood(exp(y),ys=data, cond=cond,m0,ma, null=T,const)*exp(y+y^2)
}
laplace = fit0$theta^(-2)*sqrt(2*pi)*fit0$SE.theta*pnorm(1/fit0$theta)
laplace
mean(joint.likelihood(x,ys = data,cond = cond,m0,ma,null=T,const))
joint.likelihood(x,ys = data,cond = cond,m0,ma,null=T,const)
x=rtruncnorm(1000000,a=0,mean = 1/fit0$theta, sd = sqrt(nn))
x
mean(joint.likelihood(x,ys = data,cond = cond,m0,ma,null=T,const))
nn=1500
data = rnbinom(n=nn,size = 5,mu=5)
library(MASS)
x = scale(1:nn)
fit=glm.nb(data~x)
fit0=glm.nb(data~1)
m0=rep(mean(data),nn)
ma=fitted(fit)
const = exp(sum(log(dnbinom(x= data,mu=m0,size = fit0$theta)))/nn)
samp = rtruncnorm(1000000,a=0,mean = 1/fit0$theta, sd = sqrt(nn))
mc = mean(joint.likelihood(samp,ys = data,cond = cond,m0,ma,null=T,const))
mc
res1500
samp
samp = rtruncnorm(10000000,a=0,mean = 1/fit0$theta, sd = sqrt(nn))
mc = mean(joint.likelihood(samp,ys = data,cond = cond,m0,ma,null=T,const))
samp = rtruncnorm(10000000,a=0,mean = 1/fit0$theta, sd = sqrt(nn))
mc = mean(joint.likelihood(samp,ys = data,cond = cond,m0,ma,null=T,
const)/dtruncnorm(samp,a=0,mean = 1/fit0$theta, sd = sqrt(nn)))
mc
res1500
library(intSEQ)
library(fastGHQuad)
library(truncnorm)
tryint <- function(nn,slope= 0,beta0 = log(5)){
x = scale(1:nn,TRUE,TRUE)
muhat = exp(beta0+slope*x)
data = rnbinom(n=nn,size = 5,mu=muhat)
library(MASS)
x = scale(1:nn)
fit=glm.nb(data~x)
fit0=glm.nb(data~1)
m0=rep(mean(data),nn)
ma=fitted(fit)
const = exp(sum(log(dnbinom(x= data,mu=m0,size = fit0$theta)))/nn)
nullfunc <- function(y, data,  m0,ma, const){
joint.likelihood(exp(y),ys=data, cond=cond,m0,ma, null=T,const)*exp(y+y^2)
}
rule15 <- gaussHermiteData(350)
nullLik=ghQuad(nullfunc, rule15, data = data,m0=m0, ma=ma, const = const)
laplace = fit0$theta^(-2)*sqrt(2*pi)*fit0$SE.theta
c(nullLik,laplace)
}
res30 = replicate(100,tryint(30,slope = 1))
res60 = replicate(100,tryint(60,slope = 1))
res100=replicate(100,tryint(100,slope = 1))
res500 = replicate(100,tryint(500,slope = 1))
res1000=replicate(100,tryint(1000,slope = 1))
res1500=replicate(100,tryint(1500,slope = 1))
rr=c(res30[1,]/res30[2,],res60[1,]/res60[2,],res100[1,]/res100[2,],
res500[1,]/res500[2,],
res1000[1,]/res1000[2,])
ff=factor(rep(c(30,60,100,500,1000),each=100))
boxplot(rr~ff,ylim=c(0.9,1.1))
abline(h=1)
res1000=replicate(100,tryint(1000,slope = 1))
rr=c(res30[1,]/res30[2,],res60[1,]/res60[2,],res100[1,]/res100[2,],
res500[1,]/res500[2,],
res1000[1,]/res1000[2,])
ff=factor(rep(c(30,60,100,500,1000),each=100))
tryint <- function(nn,slope= 0,beta0 = log(5)){
x = scale(1:nn,TRUE,TRUE)
muhat = exp(beta0+slope*x)
data = rnbinom(n=nn,size = 5,mu=muhat)
library(MASS)
x = scale(1:nn)
fit=glm.nb(data~x)
fit0=glm.nb(data~1)
m0=rep(mean(data),nn)
ma=fitted(fit)
const = exp(sum(log(dnbinom(x= data,mu=m0,size = fit0$theta)))/nn)
nullfunc <- function(y, data,  m0,ma, const){
joint.likelihood(exp(y),ys=data, cond=cond,m0,ma, null=T,const)*exp(y+y^2)
}
rule15 <- gaussHermiteData(400)
nullLik=ghQuad(nullfunc, rule15, data = data,m0=m0, ma=ma, const = const)
laplace = fit0$theta^(-2)*sqrt(2*pi)*fit0$SE.theta
c(nullLik,laplace)
}
res30 = replicate(100,tryint(30,slope = 1))
res60 = replicate(100,tryint(60,slope = 1))
res100=replicate(100,tryint(100,slope = 1))
res500 = replicate(100,tryint(500,slope = 1))
res1000=replicate(100,tryint(1000,slope = 1))
rr=c(res30[1,]/res30[2,],res60[1,]/res60[2,],res100[1,]/res100[2,],
res500[1,]/res500[2,],
res1000[1,]/res1000[2,])
ff=factor(rep(c(30,60,100,500,1000),each=100))
boxplot(rr~ff,ylim=c(0.9,1.1))
rr=c(res30[1,]/res30[2,],res60[1,]/res60[2,],res100[1,]/res100[2,],
res500[1,]/res500[2,],
res1000[1,]/res1000[2,])
ff=factor(rep(c(30,60,100,500,1000),each=100))
boxplot(rr~ff,ylim=c(0.9,1.1))
rr
res30
tryint <- function(nn,slope= 0,beta0 = log(5)){
x = scale(1:nn,TRUE,TRUE)
muhat = exp(beta0+slope*x)
data = rnbinom(n=nn,size = 5,mu=muhat)
library(MASS)
x = scale(1:nn)
fit=glm.nb(data~x)
fit0=glm.nb(data~1)
m0=rep(mean(data),nn)
ma=fitted(fit)
const = exp(sum(log(dnbinom(x= data,mu=m0,size = fit0$theta)))/nn)
nullfunc <- function(y, data,  m0,ma, const){
joint.likelihood(exp(y),ys=data, cond=cond,m0,ma, null=T,const)*exp(y+y^2)
}
rule15 <- gaussHermiteData(300)
nullLik=ghQuad(nullfunc, rule15, data = data,m0=m0, ma=ma, const = const)
laplace = fit0$theta^(-2)*sqrt(2*pi)*fit0$SE.theta
c(nullLik,laplace)
}
res30 = replicate(100,tryint(30,slope = 1))
res30
res30 = replicate(100,tryint(30,slope = 1))
res60 = replicate(100,tryint(60,slope = 1))
res100=replicate(100,tryint(100,slope = 1))
res500 = replicate(100,tryint(500,slope = 1))
res700=replicate(100,tryint(700,slope = 1))
rr=c(res30[1,]/res30[2,],res60[1,]/res60[2,],res100[1,]/res100[2,],
res500[1,]/res500[2,],
res700[1,]/res700[2,])
ff=factor(rep(c(30,60,100,500,700),each=100))
boxplot(rr~ff,ylim=c(0.9,1.1))
res30 = replicate(100,tryint(30,slope = 0))
res60 = replicate(100,tryint(60,slope = 0))
res100=replicate(100,tryint(100,slope = 0))
res500 = replicate(100,tryint(500,slope = 0))
res700=replicate(100,tryint(700,slope = 0))
rr=c(res30[1,]/res30[2,],res60[1,]/res60[2,],res100[1,]/res100[2,],
res500[1,]/res500[2,],
res700[1,]/res700[2,])
ff=factor(rep(c(30,60,100,500,700),each=100))
boxplot(rr~ff,ylim=c(0.9,1.1))
abline(h=1)
res30 = replicate(100,tryint(30,slope = 1))
res60 = replicate(100,tryint(60,slope = 1))
res100=replicate(100,tryint(100,slope = 1))
res500 = replicate(100,tryint(500,slope = 1))
res700=replicate(100,tryint(700,slope = 1))
rr=c(res30[1,]/res30[2,],res60[1,]/res60[2,],res100[1,]/res100[2,],
res500[1,]/res500[2,],
res700[1,]/res700[2,])
ff=factor(rep(c(30,60,100,500,700),each=100))
boxplot(rr~ff,ylim=c(0.9,1.1))
abline(h=1)
tryint <- function(nn,slope= 0,beta0 = log(5)){
x = scale(1:nn,TRUE,TRUE)
muhat = exp(beta0+slope*x)
data = rnbinom(n=nn,size = 5,mu=muhat)
library(MASS)
x = scale(1:nn)
fit=glm.nb(data~x)
fit0=glm.nb(data~1)
m0=rep(mean(data),nn)
ma=fitted(fit)
const = exp(sum(log(dnbinom(x= data,mu=m0,size = fit0$theta)))/nn)
nullfunc <- function(y, data,  m0,ma, const){
joint.likelihood(exp(y),ys=data, cond=cond,m0,ma, null=T,const)*exp(y+y^2)
}
rule15 <- gaussHermiteData(350)
nullLik=ghQuad(nullfunc, rule15, data = data,m0=m0, ma=ma, const = const)
laplace = fit0$theta^(-2)*sqrt(2*pi)*fit0$SE.theta
c(nullLik,laplace)
}
res30 = replicate(100,tryint(30,slope = 1))
res60 = replicate(100,tryint(60,slope = 1))
res100=replicate(100,tryint(100,slope = 1))
res500 = replicate(100,tryint(500,slope = 1))
res700=replicate(100,tryint(700,slope = 1))
rr=c(res30[1,]/res30[2,],res60[1,]/res60[2,],res100[1,]/res100[2,],
res500[1,]/res500[2,],
res700[1,]/res700[2,])
ff=factor(rep(c(30,60,100,500,700),each=100))
boxplot(rr~ff,ylim=c(0.9,1.1))
abline(h=1)
par(mfrow=c(2,2))
par(mfrow=c(1,1))
library(intSEQ)
data(count.data)
data(condition)
res=intSEQ(count.data, condition, nneighbour=400,lambda1=10,lambda2=0.05,meanmeth="local.mean"
,"loess",normalize=TRUE, coeff =c(2))
library(intSEQ)
data(count.data)
data(condition)
res=intSEQ(count.data, condition, nneighbour=400,lambda1=10,lambda2=0.05,meanmeth="local.mean"
,"loess",normalize=TRUE, coeff =c(2))
setwd("D:/intSEQ/R")
-587+109+435-605-979+119+723+726-1131+549+625-1259-782-720+660+1070+450-553+577
library(intSEQ)
?joint.likelihood
